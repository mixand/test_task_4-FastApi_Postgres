"""init table

Revision ID: 186052d13715
Revises: 
Create Date: 2023-05-27 22:47:40.102457

"""
import random
import string
import os
from alembic import op
import sqlalchemy as sa

from db import car_db

# revision identifiers, used by Alembic.
revision = '186052d13715'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('car_db',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('unique_number', sa.String(), nullable=True),
    sa.Column('loc_lat', sa.String(), nullable=True),
    sa.Column('loc_lng', sa.String(), nullable=True),
    sa.Column('load_capacity', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('unique_number')
    )
    op.create_table('cargo_db',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('loc_pick_up_lat', sa.String(), nullable=True),
    sa.Column('loc_pick_up_lng', sa.String(), nullable=True),
    sa.Column('delivery_lat', sa.String(), nullable=True),
    sa.Column('delivery_lng', sa.String(), nullable=True),
    sa.Column('weight', sa.Integer(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('location_db',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('city', sa.String(), nullable=True),
    sa.Column('state_name', sa.String(), nullable=True),
    sa.Column('zip', sa.String(), nullable=True),
    sa.Column('lat', sa.String(), nullable=True),
    sa.Column('lng', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )

    dir_name = os.path.dirname(__file__)
    filename = os.path.join(dir_name, 'uszips.csv')
    path_with_command = f'cut -d "," -f 1,2,3,4,6 {filename}'
    op.execute(f"copy location_db(zip, lat, lng, city, state_name) FROM PROGRAM '{path_with_command}' WITH (FORMAT CSV, HEADER);", execution_options=None)

    conn = op.get_bind()
    res = conn.execute("select zip from location_db")
    results = res.fetchall()
    list_zip = set([i[0] for i in results])
    list_zip = list(list_zip)
    list_zip_random = []
    for i in range(20):
        temp = random.choice(list_zip)
        list_zip_random.append(temp)
        list_zip.remove(temp)
    random_value = []
    for i in list_zip_random:
        res = conn.execute("select lat, lng from location_db where zip='%s'" % i)
        results = res.fetchone()
        temp = {"unique_number": f"{random.choice(range(1000, 9999))}{random.choice(string.ascii_uppercase)}",
                "loc_lat": results[0],
                "loc_lng": results[1],
                "load_capacity": random.choice(range(1, 1001))
                }
        random_value.append(temp)
    op.bulk_insert(car_db, random_value)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('location_db')
    op.drop_table('cargo_db')
    op.drop_table('car_db')
    # ### end Alembic commands ###
